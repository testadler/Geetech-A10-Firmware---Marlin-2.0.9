make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: *** No rule to make target 'all'.  Stop.
 
# GNU Make 4.3
# Built for x86_64-unknown-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jan 22 12:17:14 2022

# Variables

# environment
GDK_BACKEND = x11
# environment
LC_ALL = C
# environment
PULSE_SERVER = unix:/run/flatpak/pulse/native
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-ee030182-3732-4b97-8c6a-7bfa7d8669f0.sock
# environment
MANDATORY_PATH = /usr/share/gconf/pantheon.mandatory.path
# environment
SBX_CHROME_API_RQ = 1
# environment
LC_NAME = de_DE.UTF-8
# environment
LC_NUMERIC = de_DE.UTF-8
# environment
VSCODE_CWD = /home/sascha/Dokumente/Geetech A10/Source/.pio/build/mega2560
# environment
LC_ADDRESS = de_DE.UTF-8
# environment
GDM_LANG = de_DE
# default
MAKE_COMMAND := make
# environment
QT_ACCESSIBILITY = 1
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
PWD = /home/sascha/Dokumente/Geetech A10/Source
# environment
ZYPAK_ZYGOTE_STRATEGY_SPAWN = 1
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
GI_TYPELIB_PATH = /app/lib/girepository-1.0
# environment
XDG_DATA_DIRS = /app/share:/usr/share:/usr/share/runtime/share:/run/host/user-share:/run/host/share
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# environment
VSCODE_CODE_CACHE_PATH = /home/sascha/.var/app/com.visualstudio.code/config/Code/CachedData/6cba118ac49a1b88332f312a8f67186f7f3c1643
# environment
XDG_SESSION_PATH = /org/freedesktop/DisplayManager/Session0
# environment
LANG = C
# environment
XAUTHORITY = /run/flatpak/Xauthority
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/include /usr/include
# environment
ALSA_CONFIG_DIR = /usr/share/alsa
# makefile
MAKEFLAGS = pqrR
# makefile
CURDIR := /home/sascha/Dokumente/Geetech A10/Source
# environment
VSCODE_PIPE_LOGGING = true
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
ZYPAK_LIB = /app/bin/../lib
# environment
MFLAGS = -pqrR
# environment
SSH_AUTH_SOCK = /run/flatpak/ssh-auth
# default
.SHELLFLAGS := -c
# environment
XDG_CONFIG_DIRS = /app/etc/xdg:/etc/xdg
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
ALSA_CONFIG_PATH = /usr/share/alsa/alsa-flatpak.conf
# environment
XDG_SESSION_DESKTOP = pantheon
# environment
VSCODE_CRASH_REPORTER_START_OPTIONS = {"companyName":"Microsoft","productName":"VSCode","submitURL":"appcenter://code?aid=fba07a4d-84bd-4fc8-a125-9640fc8ce171&uid=2ffe0615-85c6-4826-9d33-d0c288f87499&iid=2ffe0615-85c6-4826-9d33-d0c288f87499&sid=2ffe0615-85c6-4826-9d33-d0c288f87499","uploadToServer":true}
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST := Makefile
# environment
FLATPAK_SANDBOX_DIR = /home/sascha/.var/app/com.visualstudio.code/sandbox
# automatic
@F = $(notdir $@)
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
VSCODE_PID = 2
# environment
XDG_SESSION_TYPE = x11
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
AT_SPI_BUS_ADDRESS = unix:path=/run/flatpak/at-spi-bus
# environment
XDG_DATA_HOME = /home/sascha/.var/app/com.visualstudio.code/data
# environment
SESSION_MANAGER = local/X550CAc69eadf8:@/tmp/.ICE-unix/2637,unix/X550CAc69eadf8:/tmp/.ICE-unix/2637
# automatic
*F = $(notdir $*)
# environment
QT_QPA_PLATFORMTHEME = gtk3
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/flatpak/bus
# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
VSCODE_NLS_CONFIG = {"locale":"de","availableLanguages":{"*":"de"},"_languagePackId":"2a824ad62a9f9f13bff1d6e0a3ddec2f.de","_translationsConfigFile":"/home/sascha/.var/app/com.visualstudio.code/config/Code/clp/2a824ad62a9f9f13bff1d6e0a3ddec2f.de/tcf.json","_cacheRoot":"/home/sascha/.var/app/com.visualstudio.code/config/Code/clp/2a824ad62a9f9f13bff1d6e0a3ddec2f.de","_resolvedLanguagePackCoreLocation":"/home/sascha/.var/app/com.visualstudio.code/config/Code/clp/2a824ad62a9f9f13bff1d6e0a3ddec2f.de/6cba118ac49a1b88332f312a8f67186f7f3c1643","_corruptedFile":"/home/sascha/.var/app/com.visualstudio.code/config/Code/clp/2a824ad62a9f9f13bff1d6e0a3ddec2f.de/corrupted.info","_languagePackSupport":true}
# environment
BREAKPAD_DUMP_LOCATION = /home/sascha/.var/app/com.visualstudio.code/config/Code/exthost Crash Reports
# default
MAKE_HOST := x86_64-unknown-linux-gnu
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# makefile
SHELL = /bin/sh
# default
MAKECMDGOALS := all
# environment
XMODIFIERS = @im=ibus
# environment
PLATFORMIO_CALLER = vscode
# environment
LD_LIBRARY_PATH = /app/lib
# environment
SANDBOX_LD_LIBRARY_PATH = /app/lib
# environment
SHLVL = 0
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# environment
PATH = /app/bin:/app/bin:/usr/bin
# default
MAKEFILES := 
# environment
LANGUAGE = de_DE
# environment
LC_MONETARY = de_DE.UTF-8
# automatic
^F = $(notdir $^)
# environment
DBUS_SYSTEM_BUS_ADDRESS = unix:path=/run/dbus/system_bus_socket
# environment
LC_TIME = de_DE.UTF-8
# environment
XDG_CONFIG_HOME = /home/sascha/.var/app/com.visualstudio.code/config
# environment
INVOCATION_ID = ced143eee2be4a009bc52e904269a191
# environment
VSCODE_LOG_NATIVE = false
# environment
LC_TELEPHONE = de_DE.UTF-8
# automatic
?F = $(notdir $?)
# environment
NO_PROXY = 127.0.0.1
# environment
XDG_CURRENT_DESKTOP = Unity
# environment
LS_COLORS = 
# automatic
+F = $(notdir $+)
# environment
XDG_SEAT_PATH = /org/freedesktop/DisplayManager/Seat0
# environment
DESKTOP_SESSION = pantheon
# environment
GST_PLUGIN_SYSTEM_PATH = /app/lib/gstreamer-1.0:/usr/lib/extensions/gstreamer-1.0:/usr/lib/x86_64-linux-gnu/gstreamer-1.0
 
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = Pantheon
# 'override' directive
GNUMAKEFLAGS := 
# environment
LOGNAME = sascha
# environment
container = flatpak
# environment
PLATFORMIO_PATH = /home/sascha/.platformio/penv/bin:/home/sascha/.platformio/penv:/home/sascha/.platformio/python3/bin:/app/bin:/app/bin:/usr/bin
# makefile
.DEFAULT_GOAL := help
# environment
NPM_CONFIG_GLOBALCONFIG = /app/etc/npmrc
# environment
GTK_MODULES = gail:atk-bridge
# environment
USER = sascha
# environment
DISPLAY = :99.0
# environment
DEFAULTS_PATH = /usr/share/gconf/pantheon.default.path
# default
MAKE_VERSION := 4.3
# environment
MANAGERPID = 2624
# environment
GIO_USE_VFS = local
# environment
LC_MEASUREMENT = de_DE.UTF-8
# environment
QT_STYLE_OVERRIDE = adwaita
# environment
SSH_AGENT_PID = 2739
# environment
_ = /usr/bin/make
# environment
LC_PAPER = de_DE.UTF-8
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
PULSE_CLIENTCONFIG = /run/flatpak/pulse/config
# environment
JOURNAL_STREAM = 8:43770
# environment
XDG_SESSION_CLASS = user
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# environment
PLATFORMIO_IDE = 2.4.0
# environment
HOME = /home/sascha
# environment
QT_IM_MODULE = ibus
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-2e62468e-1.61.2-main.sock
# environment
IM_CONFIG_PHASE = 1
# environment
PAPERSIZE = a4
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# default
SUFFIXES := 
# environment
XDG_CACHE_HOME = /home/sascha/.var/app/com.visualstudio.code/cache
# environment
XDG_GREETER_DATA_DIR = /var/lib/lightdm-data/sascha
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink load
# environment
FLATPAK_ID = com.visualstudio.code
# environment
XDG_MENU_PREFIX = gnome-
# environment
ZYPAK_BIN = /app/bin
# environment
GDMSESSION = pantheon
# environment
LC_IDENTIFICATION = de_DE.UTF-8
# variable set hash-table stats:
# Load=135/1024=13%, Rehash=0, Collisions=21/163=13%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 64768, inode 6688554): 20 files, no impossibilities.

# 20 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-01-17 11:19:12
#  File has been updated.
#  Successfully updated.

tests-all-local-docker:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 47):
	docker-compose run --rm marlin $(MAKE) tests-all-local VERBOSE_PLATFORMIO=$(VERBOSE_PLATFORMIO) GIT_RESET_HARD=$(GIT_RESET_HARD)

tests-single-local:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 29):
	@if ! test -n "$(TEST_TARGET)" ; then echo "***ERROR*** Set TEST_TARGET=<your-module> or use make tests-all-local" ; return 1; fi
	export PATH=./buildroot/bin/:./buildroot/tests/:${PATH} \
	  && export VERBOSE_PLATFORMIO=$(VERBOSE_PLATFORMIO) \
	  && run_tests . $(TEST_TARGET) "$(ONLY_TEST)"

tests-single-local-docker:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 36):
	@if ! test -n "$(TEST_TARGET)" ; then echo "***ERROR*** Set TEST_TARGET=<your-module> or use make tests-all-local-docker" ; return 1; fi
	docker-compose run --rm marlin $(MAKE) tests-single-local TEST_TARGET=$(TEST_TARGET) VERBOSE_PLATFORMIO=$(VERBOSE_PLATFORMIO) GIT_RESET_HARD=$(GIT_RESET_HARD) ONLY_TEST="$(ONLY_TEST)"

setup-local-docker:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 51):
	docker-compose build

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 2):
	@echo "Tasks for local development:"
	@echo "* tests-single-ci:             Run a single test from inside the CI"
	@echo "* tests-single-local:          Run a single test locally"
	@echo "* tests-single-local-docker:   Run a single test locally, using docker-compose"
	@echo "* tests-all-local:             Run all tests locally"
	@echo "* tests-all-local-docker:      Run all tests locally, using docker-compose"
	@echo "* setup-local-docker:          Setup local docker-compose"
	@echo ""
	@echo "Options for testing:"
	@echo "  TEST_TARGET          Set when running tests-single-*, to select the"
	@echo "                       test. If you set it to ALL it will run all "
	@echo "                       tests, but some of them are broken: use "
	@echo "                       tests-all-* instead to run only the ones that "
	@echo "                       run on GitHub CI"
	@echo "  ONLY_TEST            Limit tests to only those that contain this, or"
	@echo "                       the index of the test (1-based)"
	@echo "  VERBOSE_PLATFORMIO   If you want the full PIO output, set any value"
	@echo "  GIT_RESET_HARD       Used by CI: reset all local changes. WARNING:"
	@echo "                       THIS WILL UNDO ANY CHANGES YOU'VE MADE!"

tests-all-local:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 41):
	export PATH=./buildroot/bin/:./buildroot/tests/:${PATH} \
	  && export VERBOSE_PLATFORMIO=$(VERBOSE_PLATFORMIO) \
	  && for TEST_TARGET in $$(./get_test_targets.py) ; do echo "Running tests for $$TEST_TARGET" ; run_tests . $$TEST_TARGET ; done

tests-single-ci:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 24):
	export GIT_RESET_HARD=true
	$(MAKE) tests-single-local TEST_TARGET=$(TEST_TARGET)

.PHONY: help tests-single-ci tests-single-local tests-single-local-docker tests-all-local tests-all-local-docker setup-local-docker
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=12/1024=1%, Rehash=0, Collisions=0/35=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 32 / storage = 358 B / avg = 11 B
# current buf: size = 8162 B / used = 358 B / count = 32 / avg = 11 B

# strcache performance: lookups = 63 / hit rate = 49%
# hash-table stats:
# Load=32/8192=0%, Rehash=0, Collisions=0/63=0%
# Finished Make data base on Sat Jan 22 12:17:14 2022

 
